// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Frontend Storyshots EditableText editing 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
        width="42px"
      />
       EditableText
    </h2>
    <p>
      Used on Glossary page and modals for editable glossary terms.
    </p>
    <input
      aria-label={undefined}
      autoComplete={undefined}
      autoFocus={false}
      className="textInput"
      id={undefined}
      maxLength={255}
      onBlur={[Function]}
      onChange={undefined}
      onFocus={[Function]}
      onKeyDown={undefined}
      onSelect={undefined}
      placeholder="Add a descriptionâ€¦"
      readOnly={false}
      type={undefined}
      value="Test text"
    />
    <hr />
    <h3>
      Props
    </h3>
    <table
      bordered={true}
      condensed={true}
      hover={true}
      striped={true}
    >
      <thead>
        <tr>
          <th>
            Name
          </th>
          <th>
            Type
          </th>
          <th>
            Default
          </th>
          <th>
            Description
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            children
          </td>
          <td>
            string
          </td>
          <td />
          <td>
            String value for this text field
          </td>
        </tr>
        <tr>
          <td>
            editable
          </td>
          <td>
            boolean
          </td>
          <td>
            false
          </td>
          <td>
            Toggle whether the text field is in editable or not.
          </td>
        </tr>
        <tr>
          <td>
            editing
          </td>
          <td>
            boolean
          </td>
          <td>
            false
          </td>
          <td>
            Toggle whether the text field is in editing mode or not.
          </td>
        </tr>
        <tr>
          <td>
            placeholder
          </td>
          <td>
            string
          </td>
          <td />
          <td>
            Field placeholder text
          </td>
        </tr>
        <tr>
          <td>
            emptyReadOnlyText
          </td>
          <td>
            string
          </td>
          <td />
          <td>
            String to display if it is editable and children is empty and there is not placeholder
          </td>
        </tr>
        <tr>
          <td>
            title
          </td>
          <td>
            string
          </td>
          <td />
          <td>
            Field tooltip
          </td>
        </tr>
      </tbody>
    </table>
  </span>
</div>
`;

exports[`Frontend Storyshots EditableText not editing 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
        width="42px"
      />
       EditableText - disabled
    </h2>
    <div
      className="ant-row textInput w-100 tl text ellipsis"
      onClick={[Function]}
      style={undefined}
      title={undefined}
    >
      Test text
    </div>
  </span>
</div>
`;

exports[`Frontend Storyshots Foundation colours 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      Main colors
    </h2>
    <small>
      Hover for hexcode
    </small>
    <br />
    <div
      className="sg-color sg-brand-primary sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #03A6D7
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-gray-lighter sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #546677
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-gray-light sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #629BAC
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-muted sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #A2B3BE
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-neutral sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #BDD4DC
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-gray-dark sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #F5F5F5
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-gray-darker sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #DDDDDD
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-gray-darkest sg-lg"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #555555
        </span>
      </span>
    </div>
    <h2>
      Status colours
    </h2>
    <div
      className="sg-color sg-brand-success"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #62C876
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-brand-unsure"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #E9DD00
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-brand-warning"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #FFA800
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-brand-danger"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #FF3B3D
        </span>
      </span>
    </div>
    <div
      className="sg-color sg-brand-info"
    >
      <span
        className="sg-color-swatch"
      >
        <span
          className="sg-animated"
        >
          #4E9FDD
        </span>
      </span>
    </div>
  </span>
</div>
`;

exports[`Frontend Storyshots Foundation typography 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      Font stack
    </h2>
    <p>
      <code>
        'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;
      </code>
    </p>
  </span>
</div>
`;

exports[`Frontend Storyshots Link link page not in frontend app 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
        width="42px"
      />
       Link *not* in frontend
    </h2>
    <p>
      Use this link colour anywhere outside of frontend. ie. Editor, zanata.org
    </p>
    <a
      href="http://zanata.org/language/view/ja"
    >
      Japanese
    </a>
  </span>
</div>
`;

exports[`Frontend Storyshots Link link within frontend app 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
        width="42px"
      />
       Link in frontend
    </h2>
    <p>
       Common link component which generates 
      <code>
        a href
      </code>
       or in-page navigation link based on useHref.
    </p>
    <a
      onClick={[Function]}
      style={Object {}}
    >
      Languages
    </a>
    <hr />
    <h3>
      Props
    </h3>
    <table>
      <thead>
        <tr>
          <th>
            Name
          </th>
          <th>
            Type
          </th>
          <th>
            Default
          </th>
          <th>
            Description
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>
            id
          </td>
          <td>
            string
          </td>
          <td />
          <td>
            ID attribute
          </td>
        </tr>
        <tr>
          <td>
            link
          </td>
          <td>
            string
          </td>
          <td />
          <td>
            HTML url or location#hash
          </td>
        </tr>
        <tr>
          <td>
            useHref
          </td>
          <td>
            bool
          </td>
          <td>
            false
          </td>
          <td>
            Toggle whether to use 
            <code>
              a href
            </code>
             or in-page navigation
          </td>
        </tr>
        <tr>
          <td>
            children
          </td>
          <td>
            node
          </td>
          <td />
          <td />
        </tr>
      </tbody>
    </table>
  </span>
</div>
`;

exports[`Frontend Storyshots LoaderText default 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
        width="42px"
      />
      LoaderText
    </h2>
    <p>
      Use this when there is content that needs to be loaded so that the user is given feedback.
    </p>
    <span
      className="loaderText"
    >
      <span
        className="f5 b"
      >
        Updating
        <span
          className="loader"
        >
          <span>
            <div
              className=""
              dangerouslySetInnerHTML={
                Object {
                  "__html": "<svg class=\\"icon-blank\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 32 32\\"></svg>
",
                }
              }
              style={
                Object {
                  "fill": "#546677",
                  "height": 64,
                  "width": 64,
                }
              }
            />
          </span>
        </span>
      </span>
    </span>
  </span>
</div>
`;

exports[`Frontend Storyshots MTMerge single 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <Alert
    message="Have you run TM Merge first?"
    showIcon={true}
    type="warning"
  />
  <br />
  <Alert
    message="Only .po (gettext) and .properties files are supported"
    showIcon={true}
    type="info"
  />
  <h3
    className="txt-info mt4 fw5"
  >
    <Icon
      className="mr2 txt-neutral"
      type="global"
    />
    Language
  </h3>
  <div
    className="ant-select ant-select-enabled"
    onBlur={[Function]}
    onClick={[Function]}
    onContextMenu={undefined}
    onFocus={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={undefined}
    onMouseLeave={undefined}
    onTouchStart={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <div
      aria-autocomplete="list"
      aria-expanded={false}
      aria-haspopup="true"
      className="ant-select-selection
            ant-select-selection--single"
      onKeyDown={[Function]}
      role="combobox"
      tabIndex={0}
    >
      <div
        className="ant-select-selection__rendered"
      >
        <div
          className="ant-select-selection__placeholder"
          onClick={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "WebkitUserSelect": "none",
              "display": "block",
              "userSelect": "none",
            }
          }
          unselectable="unselectable"
        >
          Select a locale
        </div>
        <div
          className="ant-select-search ant-select-search--inline"
          style={
            Object {
              "display": "none",
            }
          }
        >
          <div
            className="ant-select-search__field__wrap"
          >
            <input
              autoComplete="off"
              className="ant-select-search__field"
              disabled={undefined}
              id={undefined}
              onChange={[Function]}
              onKeyDown={[Function]}
              value=""
            />
            <span
              className="ant-select-search__field__mirror"
            >
              
              Â 
            </span>
          </div>
        </div>
      </div>
      <span
        className="ant-select-arrow"
        onClick={[Function]}
        style={
          Object {
            "WebkitUserSelect": "none",
            "userSelect": "none",
          }
        }
        unselectable="unselectable"
      >
        <b />
      </span>
    </div>
  </div>
  <div
    className="mt3"
  >
    <Card
      hoverable={true}
    >
      <div
        className="pb1"
      >
        <Alert
          message="MT merge will save translations with validation errors as fuzzy"
          showIcon={true}
          type="warning"
        />
        <h3
          className="txt-info mt-toggleHeading"
        >
          <span
            className="mr2 fw5"
          >
            Save as
          </span>
          <span
            className="di"
          >
            <Switch
              checkedChildren="translated"
              className="transSwitch"
              onChange={[Function]}
              unCheckedChildren="fuzzy"
            />
          </span>
        </h3>
      </div>
    </Card>
  </div>
</div>
`;

exports[`Frontend Storyshots MTMergeModal single 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <Modal
    closable={true}
    destroyOnClose={true}
    footer={
      Array [
        <Button
          disabled={false}
          onClick={[Function]}
        >
          Close
        </Button>,
        <Button
          disabled={true}
          onClick={[Function]}
          type="primary"
        >
          Run Merge
        </Button>,
      ]
    }
    maskClosable={true}
    onCancel={[Function]}
    onOk={[Function]}
    title="Machine Translation Merge"
    visible={true}
  >
    <Alert
      message="Have you run TM Merge first?"
      showIcon={true}
      type="warning"
    />
    <br />
    <Alert
      message="Only .po (gettext) and .properties files are supported"
      showIcon={true}
      type="info"
    />
    <h3
      className="txt-info mt4 fw5"
    >
      <Icon
        className="mr2 txt-neutral"
        type="global"
      />
      Language
    </h3>
    <div
      className="ant-select ant-select-enabled"
      onBlur={[Function]}
      onClick={[Function]}
      onContextMenu={undefined}
      onFocus={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={undefined}
      onMouseLeave={undefined}
      onTouchStart={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <div
        aria-autocomplete="list"
        aria-expanded={false}
        aria-haspopup="true"
        className="ant-select-selection
            ant-select-selection--single"
        onKeyDown={[Function]}
        role="combobox"
        tabIndex={0}
      >
        <div
          className="ant-select-selection__rendered"
        >
          <div
            className="ant-select-selection__placeholder"
            onClick={[Function]}
            onMouseDown={[Function]}
            style={
              Object {
                "WebkitUserSelect": "none",
                "display": "block",
                "userSelect": "none",
              }
            }
            unselectable="unselectable"
          >
            Select a locale
          </div>
          <div
            className="ant-select-search ant-select-search--inline"
            style={
              Object {
                "display": "none",
              }
            }
          >
            <div
              className="ant-select-search__field__wrap"
            >
              <input
                autoComplete="off"
                className="ant-select-search__field"
                disabled={undefined}
                id={undefined}
                onChange={[Function]}
                onKeyDown={[Function]}
                value=""
              />
              <span
                className="ant-select-search__field__mirror"
              >
                
                Â 
              </span>
            </div>
          </div>
        </div>
        <span
          className="ant-select-arrow"
          onClick={[Function]}
          style={
            Object {
              "WebkitUserSelect": "none",
              "userSelect": "none",
            }
          }
          unselectable="unselectable"
        >
          <b />
        </span>
      </div>
    </div>
    <div
      className="mt3"
    >
      <Card
        hoverable={true}
      >
        <div
          className="pb1"
        >
          <Alert
            message="MT merge will save translations with validation errors as fuzzy"
            showIcon={true}
            type="warning"
          />
          <h3
            className="txt-info mt-toggleHeading"
          >
            <span
              className="mr2 fw5"
            >
              Save as
            </span>
            <span
              className="di"
            >
              <Switch
                checkedChildren="translated"
                className="transSwitch"
                onChange={[Function]}
                unCheckedChildren="fuzzy"
              />
            </span>
          </h3>
        </div>
      </Card>
    </div>
  </Modal>
</div>
`;

exports[`Frontend Storyshots ProgressBar default 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <div
      className="ant-progress ant-progress-line ant-progress-status-normal ant-progress-show-info ant-progress-default"
    >
      <div>
        <div
          className="ant-progress-outer"
        >
          <div
            className="ant-progress-inner"
          >
            <div
              className="ant-progress-bg"
              style={
                Object {
                  "height": 8,
                  "width": "60%",
                }
              }
            />
          </div>
        </div>
        <span
          className="ant-progress-text"
        >
          60%
        </span>
      </div>
    </div>
  </span>
</div>
`;

exports[`Frontend Storyshots Sidebar default 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <div
    className="ant-layout ant-layout-has-sider"
  >
    <div
      className="pvSidebar ant-layout-sider"
      style={
        Object {
          "flex": "0 0 300px",
          "maxWidth": "300px",
          "minWidth": "300px",
          "width": "300px",
        }
      }
    >
      <div
        className="ant-layout-sider-children"
      >
        <h1
          className="di txt-info"
        >
          <mock-icon
            className="s5 mr1 v-sub"
            name="project"
          />
          Zanata Server
        </h1>
        <ul
          aria-activedescendant=""
          className="ant-menu ant-menu-light ant-menu-root ant-menu-vertical"
          onKeyDown={[Function]}
          role="menu"
          style={Object {}}
          tabIndex="0"
        >
          <li
            aria-disabled={undefined}
            aria-selected={true}
            className="ant-menu-item ant-menu-item-selected"
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            role="menuitem"
            style={Object {}}
            title={undefined}
          >
            <mock-icon
              className="s1 v-mid mr1"
              name="users"
            />
            <span
              className="v-mid"
            >
              People
            </span>
          </li>
          <li
            aria-disabled={undefined}
            aria-selected={false}
            className="ant-menu-item"
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            role="menuitem"
            style={Object {}}
            title={undefined}
          >
            <mock-icon
              className="s1 v-mid mr1"
              name="glossary"
            />
            <span
              className="v-mid"
            >
              Glossary
            </span>
          </li>
          <li
            aria-disabled={undefined}
            aria-selected={false}
            className="ant-menu-item"
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            role="menuitem"
            style={Object {}}
            title={undefined}
          >
            <mock-icon
              className="s1 v-mid mr1"
              name="info"
            />
            <span
              className="v-mid"
            >
              About
            </span>
          </li>
          <li
            aria-disabled={undefined}
            aria-selected={false}
            className="ant-menu-item"
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            role="menuitem"
            style={Object {}}
            title={undefined}
          >
            <mock-icon
              className="s1 v-mid mr1"
              name="settings"
            />
            <span
              className="v-mid"
            >
              Settings
            </span>
          </li>
        </ul>
        <Button
          className="ml3 mt2 mb2"
          icon="export"
          size="small"
          type="primary"
        >
          Export to TMX
        </Button>
        <Button
          className="ml3 mb2"
          icon="plus"
          size="small"
          type="primary"
        >
          Add new version
        </Button>
        <div
          className="ant-layout"
        >
          <span
            className="mt2"
          >
            <Card
              hoverable={true}
            >
              Processing document 
              <span
                className="b"
              >
                1 of 10
              </span>
              <div
                className="ant-progress ant-progress-line ant-progress-status-normal ant-progress-show-info ant-progress-default"
              >
                <div>
                  <div
                    className="ant-progress-outer"
                  >
                    <div
                      className="ant-progress-inner"
                    >
                      <div
                        className="ant-progress-bg"
                        style={
                          Object {
                            "height": 8,
                            "width": "30%",
                          }
                        }
                      />
                    </div>
                  </div>
                  <span
                    className="ant-progress-text"
                  >
                    30%
                  </span>
                </div>
              </div>
              <Button
                className="btn-danger mt1"
                size="small"
                type="danger"
              >
                Stop
              </Button>
            </Card>
          </span>
        </div>
        <div
          className="ant-layout"
        >
          <div
            className="ml1 mt4"
          >
            <h2
              className="di txt-primary"
            >
              <mock-icon
                className="s2"
                name="version"
              />
               VERSION
              <span
                className="ml3"
              >
                <div
                  className="ant-select ant-select-enabled"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={undefined}
                  onFocus={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={undefined}
                  onMouseLeave={undefined}
                  onTouchStart={[Function]}
                  style={
                    Object {
                      "width": 120,
                    }
                  }
                >
                  <div
                    aria-autocomplete="list"
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="ant-select-selection
            ant-select-selection--single"
                    onKeyDown={[Function]}
                    role="combobox"
                    tabIndex={0}
                  >
                    <div
                      className="ant-select-selection__rendered"
                    >
                      <div
                        className="ant-select-selection__placeholder"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        style={
                          Object {
                            "WebkitUserSelect": "none",
                            "display": "block",
                            "userSelect": "none",
                          }
                        }
                        unselectable="unselectable"
                      >
                        master
                      </div>
                    </div>
                    <span
                      className="ant-select-arrow"
                      onClick={[Function]}
                      style={
                        Object {
                          "WebkitUserSelect": "none",
                          "userSelect": "none",
                        }
                      }
                      unselectable="unselectable"
                    >
                      <b />
                    </span>
                  </div>
                </div>
              </span>
            </h2>
            <span
              className="txt-success"
            >
              <span
                className="f4"
              >
                60%
              </span>
               translated
            </span>
            <div
              className="progress-custom w-100 mb3"
            >
              <span
                className="progress-bar-custom progress-bar-approved"
                style={
                  Object {
                    "width": "15%",
                  }
                }
              />
              <span
                className="progress-bar-custom progress-bar-translated"
                style={
                  Object {
                    "width": "40%",
                  }
                }
              />
              <span
                className="progress-bar-custom progress-bar-needswork"
                style={
                  Object {
                    "width": "20%",
                  }
                }
              />
              <span
                className="progress-bar-custom progress-bar-rejected"
                style={
                  Object {
                    "width": "5%",
                  }
                }
              />
              <span
                className="progress-bar-custom progress-bar-untranslated"
                style={
                  Object {
                    "width": "20%",
                  }
                }
              />
            </div>
            <Button
              className="mt2 mb3 ant-dropdown-trigger"
              disabled={undefined}
              onBlur={undefined}
              onClick={undefined}
              onContextMenu={undefined}
              onFocus={undefined}
              onMouseDown={undefined}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={undefined}
            >
              Version tools 
              <mock-icon
                className="s0 v-mid"
                name="chevron-down"
              />
            </Button>
            <ul
              aria-activedescendant=""
              className="ant-menu ant-menu-light ant-menu-root ant-menu-vertical"
              onKeyDown={[Function]}
              role="menu"
              style={Object {}}
              tabIndex="0"
            >
              <li
                aria-disabled={undefined}
                aria-selected={false}
                className="ant-menu-item"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                role="menuitem"
                style={Object {}}
                title={undefined}
              >
                <span>
                  Languages
                </span>
              </li>
              <li
                aria-disabled={undefined}
                aria-selected={false}
                className="ant-menu-item"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                role="menuitem"
                style={Object {}}
                title={undefined}
              >
                <span>
                  Documents
                </span>
              </li>
              <li
                aria-disabled={undefined}
                aria-selected={false}
                className="ant-menu-item"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                role="menuitem"
                style={Object {}}
                title={undefined}
              >
                <span>
                  Groups
                </span>
              </li>
              <li
                aria-disabled={undefined}
                aria-selected={false}
                className="ant-menu-item"
                onClick={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                role="menuitem"
                style={Object {}}
                title={undefined}
              >
                <span>
                  Version settings
                </span>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
    <div
      className="ant-layout-content"
    >
      <div
        className="flexTab wideView"
      >
        <h1
          className="txt-info"
        >
          <mock-icon
            className="s5 v-sub"
            name="users"
          />
          <span
            className="fw4"
          >
            People
          </span>
        </h1>
        <Button
          className="mb4"
          icon="plus"
          type="primary"
        >
          Add someone
        </Button>
        <div
          className="ant-row mb4"
          style={undefined}
        >
          <div
            className="mr2 ant-col-xs-24 ant-col-sm-23 ant-col-md-8"
          >
            <span
              className="ant-input-search ant-input-search-enter-button ant-input-affix-wrapper"
              style={undefined}
            >
              <input
                className="ant-input"
                disabled={false}
                onKeyDown={[Function]}
                placeholder="input search text"
                size={undefined}
                style={null}
                type="text"
              />
              <span
                className="ant-input-suffix"
              >
                <Button
                  className="ant-input-search-button"
                  onClick={[Function]}
                  size={undefined}
                  type="primary"
                >
                  <Icon
                    type="search"
                  />
                </Button>
              </span>
            </span>
          </div>
          <div
            className="ant-col-xs-24 ant-col-sm-6 ant-col-md-8"
          >
            <span
              className="ml4"
            >
              <span
                className="mr2"
              >
                Show
              </span>
              <div
                className="ant-select ant-select-enabled"
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={undefined}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={undefined}
                onMouseLeave={undefined}
                onTouchStart={[Function]}
                style={
                  Object {
                    "width": 60,
                  }
                }
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title="20"
                    >
                      20
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="unselectable"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </span>
          </div>
          <div
            className="fr"
          >
            <ul
              className="ant-pagination "
              style={Object {}}
              unselectable="unselectable"
            >
              <li
                aria-disabled={true}
                className="ant-pagination-disabled ant-pagination-prev"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex={null}
                title="Previous Page"
              >
                <a
                  className="ant-pagination-item-link"
                />
              </li>
              <li
                className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex="0"
                title={1}
              >
                <a>
                  1
                </a>
              </li>
              <li
                className="ant-pagination-item ant-pagination-item-2"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex="0"
                title={2}
              >
                <a>
                  2
                </a>
              </li>
              <li
                className="ant-pagination-item ant-pagination-item-3"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex="0"
                title={3}
              >
                <a>
                  3
                </a>
              </li>
              <li
                className="ant-pagination-item ant-pagination-item-4"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex="0"
                title={4}
              >
                <a>
                  4
                </a>
              </li>
              <li
                className="ant-pagination-item ant-pagination-item-5"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex="0"
                title={5}
              >
                <a>
                  5
                </a>
              </li>
              <li
                aria-disabled={false}
                className=" ant-pagination-next"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex={0}
                title="Next Page"
              >
                <a
                  className="ant-pagination-item-link"
                />
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Frontend Storyshots TextInput default 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <span>
    <h2>
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
        width="42px"
      />
       TextInput
    </h2>
    <p>
      Basic text input field
    </p>
    <input
      aria-label="TextInput"
      autoComplete={undefined}
      autoFocus={undefined}
      className="textInput"
      id="demo"
      maxLength={100}
      onBlur={undefined}
      onChange={undefined}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onSelect={undefined}
      placeholder="TextInputâ€¦"
      readOnly={false}
      type={undefined}
      value={undefined}
    />
  </span>
</div>
`;

exports[`Frontend Storyshots TriCheckbox checkbox group 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <h3>
    Checkbox group with tri-state control
  </h3>
  <span>
    <span
      className="list-group-item"
    >
      <input
        checked={false}
        className="triCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
      <label>
        Fruits
      </label>
    </span>
    <span
      className="list-group-item"
    >
      <input
        checked={false}
        className="triCheckbox"
        name="ãƒªãƒ³ã‚´"
        onChange={[Function]}
        type="checkbox"
      />
      ãƒªãƒ³ã‚´
    </span>
    <span
      className="list-group-item"
    >
      <input
        checked={false}
        className="triCheckbox"
        name="apple"
        onChange={[Function]}
        type="checkbox"
      />
      apple
    </span>
    <span
      className="list-group-item"
    >
      <input
        checked={false}
        className="triCheckbox"
        name="æ¢¨"
        onChange={[Function]}
        type="checkbox"
      />
      æ¢¨
    </span>
    <span
      className="list-group-item"
    >
      <input
        checked={false}
        className="triCheckbox"
        name="pear"
        onChange={[Function]}
        type="checkbox"
      />
      pear
    </span>
  </span>
</div>
`;

exports[`Frontend Storyshots TriCheckbox default 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <h2>
    <img
      src="https://upload.wikimedia.org/wikipedia/commons/4/49/Zanata-Logo.svg"
      width="42px"
    />
     TriCheckbox
  </h2>
  <p>
    Checkbox with intermediate setting to indicate part of a list of checkbox items is selected.
  </p>
  <h3>
    Setting Intermediate
  </h3>
  <input
    checked={false}
    className=""
    onChange={[Function]}
    type="checkbox"
  />
  <button
    onClick={[Function]}
  >
    Make intermediate
  </button>
</div>
`;

exports[`Frontend Storyshots TriCheckbox truth table 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <h2>
    Truth Table
  </h2>
  <table
    bordered={true}
    condensed={true}
    hover={true}
    striped={true}
  >
    <tbody>
      <tr>
        <th>
          checked
        </th>
        <th>
          intermediate
        </th>
        <th>
          expected
        </th>
        <th>
          appearance
        </th>
      </tr>
      <tr>
        <td>
          false
        </td>
        <td>
          false
        </td>
        <td>
          unchecked
        </td>
        <td>
          <input
            checked={false}
            className=""
            onChange={[Function]}
            type="checkbox"
          />
        </td>
      </tr>
      <tr>
        <td>
          false
        </td>
        <td>
          true
        </td>
        <td>
          intermediate
        </td>
        <td>
          <input
            checked={false}
            className=""
            onChange={[Function]}
            type="checkbox"
          />
        </td>
      </tr>
      <tr>
        <td>
          true
        </td>
        <td>
          false
        </td>
        <td>
          checked
        </td>
        <td>
          <input
            checked={true}
            className=""
            onChange={[Function]}
            type="checkbox"
          />
        </td>
      </tr>
      <tr>
        <td>
          true
        </td>
        <td>
          true
        </td>
        <td>
          intermediate
        </td>
        <td>
          <input
            checked={true}
            className=""
            onChange={[Function]}
            type="checkbox"
          />
        </td>
      </tr>
    </tbody>
  </table>
</div>
`;

exports[`Frontend Storyshots TriCheckbox with custom styles 1`] = `
<div
  style={
    Object {
      "padding": "2em",
    }
  }
>
  <mock-icons />
  <h2>
    Passing custom styles through props
  </h2>
  <div
    className="ant-col-xs-4"
  >
    <h3>
      unstyled
    </h3>
    <input
      checked={true}
      className=""
      onChange={[Function]}
      type="checkbox"
    />
    <input
      checked={false}
      className=""
      onChange={[Function]}
      type="checkbox"
    />
    <input
      checked={false}
      className=""
      onChange={[Function]}
      type="checkbox"
    />
  </div>
  <div
    className="ant-col-xs-4"
  >
    <h3>
      default style
    </h3>
    <input
      checked={true}
      className="triCheckbox"
      onChange={[Function]}
      type="checkbox"
    />
    <input
      checked={false}
      className="triCheckbox"
      onChange={[Function]}
      type="checkbox"
    />
    <input
      checked={false}
      className="triCheckbox"
      onChange={[Function]}
      type="checkbox"
    />
  </div>
  <div
    className="ant-col-xs-4"
  >
    <h3>
      s1 class
    </h3>
    <input
      checked={true}
      className="triCheckbox s1"
      onChange={[Function]}
      type="checkbox"
    />
    <input
      checked={false}
      className="triCheckbox s1"
      onChange={[Function]}
      type="checkbox"
    />
    <input
      checked={false}
      className="triCheckbox s1"
      onChange={[Function]}
      type="checkbox"
    />
  </div>
</div>
`;
